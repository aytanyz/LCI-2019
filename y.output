State 57 conflicts: 13 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | %empty

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | ID MINUS ';'
   12     | ID PLUS ';'
   13     | IF '(' expr ')' stmt
   14     | IF '(' expr ')' stmt ELSE stmt
   15     | WHILE '(' expr ')' stmt
   16     | LOOP '(' ID ')' stmt
   17     | ID '=' expr QUES expr DOT expr ';'
   18     | expr QUES ID DOT ID '=' expr ';'
   19     | PRINT expr ';'

   20 expr: VAL
   21     | FALSE
   22     | TRUE
   23     | ID
   24     | '(' expr ')'
   25     | expr '+' expr
   26     | expr '-' expr
   27     | expr '*' expr
   28     | expr '/' expr
   29     | expr AND expr
   30     | expr OR expr
   31     | expr XOR expr
   32     | expr EQ expr
   33     | expr NE expr
   34     | expr GE expr
   35     | expr LE expr
   36     | expr '>' expr
   37     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 15 16 24
')' (41) 13 14 15 16 24
'*' (42) 27
'+' (43) 25
'-' (45) 26
'/' (47) 28
';' (59) 6 10 11 12 17 18 19
'<' (60) 37
'=' (61) 10 17 18
'>' (62) 36
'{' (123) 9
'}' (125) 9
error (256)
XOR (258) 31
AND (259) 29
OR (260) 30
GE (261) 34
LE (262) 35
EQ (263) 32
NE (264) 33
FALSE (265) 21
TRUE (266) 22
IF (267) 13 14
ELSE (268) 14
QUES (269) 17 18
DOT (270) 17 18
WHILE (271) 15
PRINT (272) 19
LOOP (273) 16
BOOL_TYPE (274) 2
INT_TYPE (275) 3
ID (276) 6 10 11 12 16 17 18 23
VAL (277) 20
IF_ALONE (278)
MINUS (279) 11
PLUS (280) 12


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
type (40)
    on left: 2 3, on right: 6
decls (41)
    on left: 4 5, on right: 1 4
decl (42)
    on left: 6, on right: 4
stmts (43)
    on left: 7 8, on right: 7 9
stmt (44)
    on left: 9 10 11 12 13 14 15 16 17 18 19, on right: 1 7 8 13 14
    15 16
expr (45)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37,
    on right: 10 13 14 15 17 18 19 24 25 26 27 28 29 30 31 32 33 34
    35 36 37


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    4 decls: decls . decl

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7
    PRINT      shift, and go to state 8
    LOOP       shift, and go to state 9
    BOOL_TYPE  shift, and go to state 10
    INT_TYPE   shift, and go to state 11
    ID         shift, and go to state 12
    VAL        shift, and go to state 13
    '{'        shift, and go to state 14
    '('        shift, and go to state 15

    type  go to state 16
    decl  go to state 17
    stmt  go to state 18
    expr  go to state 19


State 3

    0 $accept: program $end .

    $default  accept


State 4

   21 expr: FALSE .

    $default  reduce using rule 21 (expr)


State 5

   22 expr: TRUE .

    $default  reduce using rule 22 (expr)


State 6

   13 stmt: IF . '(' expr ')' stmt
   14     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 20


State 7

   15 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 21


State 8

   19 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 23


State 9

   16 stmt: LOOP . '(' ID ')' stmt

    '('  shift, and go to state 24


State 10

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 11

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 12

   10 stmt: ID . '=' expr ';'
   11     | ID . MINUS ';'
   12     | ID . PLUS ';'
   17     | ID . '=' expr QUES expr DOT expr ';'
   23 expr: ID .

    MINUS  shift, and go to state 25
    PLUS   shift, and go to state 26
    '='    shift, and go to state 27

    $default  reduce using rule 23 (expr)


State 13

   20 expr: VAL .

    $default  reduce using rule 20 (expr)


State 14

    9 stmt: '{' . stmts '}'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '('    shift, and go to state 15

    stmts  go to state 28
    stmt   go to state 29
    expr   go to state 19


State 15

   24 expr: '(' . expr ')'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 30


State 16

    6 decl: type . ID ';'

    ID  shift, and go to state 31


State 17

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


State 18

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 19

   18 stmt: expr . QUES ID DOT ID '=' expr ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR   shift, and go to state 32
    AND   shift, and go to state 33
    OR    shift, and go to state 34
    GE    shift, and go to state 35
    LE    shift, and go to state 36
    EQ    shift, and go to state 37
    NE    shift, and go to state 38
    QUES  shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


State 20

   13 stmt: IF '(' . expr ')' stmt
   14     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 46


State 21

   15 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 47


State 22

   23 expr: ID .

    $default  reduce using rule 23 (expr)


State 23

   19 stmt: PRINT expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 48


State 24

   16 stmt: LOOP '(' . ID ')' stmt

    ID  shift, and go to state 49


State 25

   11 stmt: ID MINUS . ';'

    ';'  shift, and go to state 50


State 26

   12 stmt: ID PLUS . ';'

    ';'  shift, and go to state 51


State 27

   10 stmt: ID '=' . expr ';'
   17     | ID '=' . expr QUES expr DOT expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 52


State 28

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '}'    shift, and go to state 53
    '('    shift, and go to state 15

    stmt  go to state 54
    expr  go to state 19


State 29

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


State 30

   24 expr: '(' expr . ')'
   25     | expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 55


State 31

    6 decl: type ID . ';'

    ';'  shift, and go to state 56


State 32

   31 expr: expr XOR . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 57


State 33

   29 expr: expr AND . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 58


State 34

   30 expr: expr OR . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 59


State 35

   34 expr: expr GE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 60


State 36

   35 expr: expr LE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 61


State 37

   32 expr: expr EQ . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 62


State 38

   33 expr: expr NE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 63


State 39

   18 stmt: expr QUES . ID DOT ID '=' expr ';'

    ID  shift, and go to state 64


State 40

   36 expr: expr '>' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 65


State 41

   37 expr: expr '<' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 66


State 42

   25 expr: expr '+' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 67


State 43

   26 expr: expr '-' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 68


State 44

   27 expr: expr '*' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 69


State 45

   28 expr: expr '/' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 70


State 46

   13 stmt: IF '(' expr . ')' stmt
   14     | IF '(' expr . ')' stmt ELSE stmt
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 71


State 47

   15 stmt: WHILE '(' expr . ')' stmt
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 72


State 48

   19 stmt: PRINT expr ';' .

    $default  reduce using rule 19 (stmt)


State 49

   16 stmt: LOOP '(' ID . ')' stmt

    ')'  shift, and go to state 73


State 50

   11 stmt: ID MINUS ';' .

    $default  reduce using rule 11 (stmt)


State 51

   12 stmt: ID PLUS ';' .

    $default  reduce using rule 12 (stmt)


State 52

   10 stmt: ID '=' expr . ';'
   17     | ID '=' expr . QUES expr DOT expr ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR   shift, and go to state 32
    AND   shift, and go to state 33
    OR    shift, and go to state 34
    GE    shift, and go to state 35
    LE    shift, and go to state 36
    EQ    shift, and go to state 37
    NE    shift, and go to state 38
    QUES  shift, and go to state 74
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45
    ';'   shift, and go to state 75


State 53

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


State 54

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 55

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


State 56

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


State 57

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   31     | expr XOR expr .
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 31 (expr)]
    AND       [reduce using rule 31 (expr)]
    OR        [reduce using rule 31 (expr)]
    GE        [reduce using rule 31 (expr)]
    LE        [reduce using rule 31 (expr)]
    EQ        [reduce using rule 31 (expr)]
    NE        [reduce using rule 31 (expr)]
    '>'       [reduce using rule 31 (expr)]
    '<'       [reduce using rule 31 (expr)]
    '+'       [reduce using rule 31 (expr)]
    '-'       [reduce using rule 31 (expr)]
    '*'       [reduce using rule 31 (expr)]
    '/'       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 58

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 59

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 60

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   34     | expr GE expr .
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 61

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   35     | expr LE expr .
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 62

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   32     | expr EQ expr .
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 63

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   33     | expr NE expr .
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 64

   18 stmt: expr QUES ID . DOT ID '=' expr ';'

    DOT  shift, and go to state 76


State 65

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   36     | expr '>' expr .
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 66

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr
   37     | expr '<' expr .

    XOR  shift, and go to state 32
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 67

   25 expr: expr . '+' expr
   25     | expr '+' expr .
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 68

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   26     | expr '-' expr .
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    XOR       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 69

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   27     | expr '*' expr .
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32

    XOR       [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 70

   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   28     | expr '/' expr .
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32

    XOR       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 71

   13 stmt: IF '(' expr ')' . stmt
   14     | IF '(' expr ')' . stmt ELSE stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '('    shift, and go to state 15

    stmt  go to state 77
    expr  go to state 19


State 72

   15 stmt: WHILE '(' expr ')' . stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '('    shift, and go to state 15

    stmt  go to state 78
    expr  go to state 19


State 73

   16 stmt: LOOP '(' ID ')' . stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '('    shift, and go to state 15

    stmt  go to state 79
    expr  go to state 19


State 74

   17 stmt: ID '=' expr QUES . expr DOT expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 80


State 75

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 76

   18 stmt: expr QUES ID DOT . ID '=' expr ';'

    ID  shift, and go to state 81


State 77

   13 stmt: IF '(' expr ')' stmt .
   14     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 82

    $default  reduce using rule 13 (stmt)


State 78

   15 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 15 (stmt)


State 79

   16 stmt: LOOP '(' ID ')' stmt .

    $default  reduce using rule 16 (stmt)


State 80

   17 stmt: ID '=' expr QUES expr . DOT expr ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    DOT  shift, and go to state 83
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45


State 81

   18 stmt: expr QUES ID DOT ID . '=' expr ';'

    '='  shift, and go to state 84


State 82

   14 stmt: IF '(' expr ')' stmt ELSE . stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    IF     shift, and go to state 6
    WHILE  shift, and go to state 7
    PRINT  shift, and go to state 8
    LOOP   shift, and go to state 9
    ID     shift, and go to state 12
    VAL    shift, and go to state 13
    '{'    shift, and go to state 14
    '('    shift, and go to state 15

    stmt  go to state 85
    expr  go to state 19


State 83

   17 stmt: ID '=' expr QUES expr DOT . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 86


State 84

   18 stmt: expr QUES ID DOT ID '=' . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 22
    VAL    shift, and go to state 13
    '('    shift, and go to state 15

    expr  go to state 87


State 85

   14 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 14 (stmt)


State 86

   17 stmt: ID '=' expr QUES expr DOT expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 88


State 87

   18 stmt: expr QUES ID DOT ID '=' expr . ';'
   25 expr: expr . '+' expr
   26     | expr . '-' expr
   27     | expr . '*' expr
   28     | expr . '/' expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . EQ expr
   33     | expr . NE expr
   34     | expr . GE expr
   35     | expr . LE expr
   36     | expr . '>' expr
   37     | expr . '<' expr

    XOR  shift, and go to state 32
    AND  shift, and go to state 33
    OR   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    EQ   shift, and go to state 37
    NE   shift, and go to state 38
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 89


State 88

   17 stmt: ID '=' expr QUES expr DOT expr ';' .

    $default  reduce using rule 17 (stmt)


State 89

   18 stmt: expr QUES ID DOT ID '=' expr ';' .

    $default  reduce using rule 18 (stmt)
