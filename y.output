State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 77 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | %empty

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | ID MINUS ';'
   12     | ID PLUS ';'
   13     | IF '(' expr ')' stmt
   14     | IF '(' expr ')' stmt ELSE stmt
   15     | WHILE '(' expr ')' stmt
   16     | LOOP '(' expr ')' stmt
   17     | PRINT expr ';'

   18 expr: VAL
   19     | FALSE
   20     | TRUE
   21     | ID
   22     | '(' expr ')'
   23     | expr '+' expr
   24     | expr '-' expr
   25     | expr '*' expr
   26     | expr '/' expr
   27     | expr AND expr
   28     | expr OR expr
   29     | expr '?' expr ':' expr
   30     | expr EQ expr
   31     | expr NE expr
   32     | expr GE expr
   33     | expr LE expr
   34     | expr '>' expr
   35     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 15 16 22
')' (41) 13 14 15 16 22
'*' (42) 25
'+' (43) 23
'-' (45) 24
'/' (47) 26
':' (58) 29
';' (59) 6 10 11 12 17
'<' (60) 35
'=' (61) 10
'>' (62) 34
'?' (63) 29
'{' (123) 9
'}' (125) 9
error (256)
AND (258) 27
OR (259) 28
GE (260) 32
LE (261) 33
EQ (262) 30
NE (263) 31
FALSE (264) 19
TRUE (265) 20
LOOP (266) 16
IF (267) 13 14
ELSE (268) 14
WHILE (269) 15
PRINT (270) 17
BOOL_TYPE (271) 2
INT_TYPE (272) 3
ID (273) 6 10 11 12 21
VAL (274) 18
IF_ALONE (275)
MINUS (276) 11
PLUS (277) 12


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
type (39)
    on left: 2 3, on right: 6
decls (40)
    on left: 4 5, on right: 1 4
decl (41)
    on left: 6, on right: 4
stmts (42)
    on left: 7 8, on right: 7 9
stmt (43)
    on left: 9 10 11 12 13 14 15 16 17, on right: 1 7 8 13 14 15 16
expr (44)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35,
    on right: 10 13 14 15 16 17 22 23 24 25 26 27 28 29 30 31 32 33
    34 35


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    4 decls: decls . decl

    LOOP       shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    PRINT      shift, and go to state 7
    BOOL_TYPE  shift, and go to state 8
    INT_TYPE   shift, and go to state 9
    ID         shift, and go to state 10
    '{'        shift, and go to state 11

    type  go to state 12
    decl  go to state 13
    stmt  go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

   16 stmt: LOOP . '(' expr ')' stmt

    '('  shift, and go to state 15


State 5

   13 stmt: IF . '(' expr ')' stmt
   14     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 16


State 6

   15 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 17


State 7

   17 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 23


State 8

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 9

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 10

   10 stmt: ID . '=' expr ';'
   11     | ID . MINUS ';'
   12     | ID . PLUS ';'

    MINUS  shift, and go to state 24
    PLUS   shift, and go to state 25
    '='    shift, and go to state 26


State 11

    9 stmt: '{' . stmts '}'

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmts  go to state 27
    stmt   go to state 28


State 12

    6 decl: type . ID ';'

    ID  shift, and go to state 29


State 13

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


State 14

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 15

   16 stmt: LOOP '(' . expr ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 30


State 16

   13 stmt: IF '(' . expr ')' stmt
   14     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 31


State 17

   15 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 32


State 18

   19 expr: FALSE .

    $default  reduce using rule 19 (expr)


State 19

   20 expr: TRUE .

    $default  reduce using rule 20 (expr)


State 20

   21 expr: ID .

    $default  reduce using rule 21 (expr)


State 21

   18 expr: VAL .

    $default  reduce using rule 18 (expr)


State 22

   22 expr: '(' . expr ')'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 33


State 23

   17 stmt: PRINT expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 46
    '?'  shift, and go to state 47


State 24

   11 stmt: ID MINUS . ';'

    ';'  shift, and go to state 48


State 25

   12 stmt: ID PLUS . ';'

    ';'  shift, and go to state 49


State 26

   10 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 50


State 27

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11
    '}'    shift, and go to state 51

    stmt  go to state 52


State 28

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


State 29

    6 decl: type ID . ';'

    ';'  shift, and go to state 53


State 30

   16 stmt: LOOP '(' expr . ')' stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 54
    '?'  shift, and go to state 47


State 31

   13 stmt: IF '(' expr . ')' stmt
   14     | IF '(' expr . ')' stmt ELSE stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 55
    '?'  shift, and go to state 47


State 32

   15 stmt: WHILE '(' expr . ')' stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 56
    '?'  shift, and go to state 47


State 33

   22 expr: '(' expr . ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 57
    '?'  shift, and go to state 47


State 34

   27 expr: expr AND . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 58


State 35

   28 expr: expr OR . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 59


State 36

   32 expr: expr GE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 60


State 37

   33 expr: expr LE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 61


State 38

   30 expr: expr EQ . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 62


State 39

   31 expr: expr NE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 63


State 40

   34 expr: expr '>' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 64


State 41

   35 expr: expr '<' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 65


State 42

   23 expr: expr '+' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 66


State 43

   24 expr: expr '-' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 67


State 44

   25 expr: expr '*' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 68


State 45

   26 expr: expr '/' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 69


State 46

   17 stmt: PRINT expr ';' .

    $default  reduce using rule 17 (stmt)


State 47

   29 expr: expr '?' . expr ':' expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 70


State 48

   11 stmt: ID MINUS ';' .

    $default  reduce using rule 11 (stmt)


State 49

   12 stmt: ID PLUS ';' .

    $default  reduce using rule 12 (stmt)


State 50

   10 stmt: ID '=' expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 71
    '?'  shift, and go to state 47


State 51

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


State 52

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 53

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


State 54

   16 stmt: LOOP '(' expr ')' . stmt

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 72


State 55

   13 stmt: IF '(' expr ')' . stmt
   14     | IF '(' expr ')' . stmt ELSE stmt

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 73


State 56

   15 stmt: WHILE '(' expr ')' . stmt

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 74


State 57

   22 expr: '(' expr ')' .

    $default  reduce using rule 22 (expr)


State 58

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 59

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 60

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   32     | expr GE expr .
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 61

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   33     | expr LE expr .
   34     | expr . '>' expr
   35     | expr . '<' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 62

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   30     | expr EQ expr .
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 63

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   31     | expr NE expr .
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 64

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   34     | expr '>' expr .
   35     | expr . '<' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 65

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr
   35     | expr '<' expr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 66

   23 expr: expr . '+' expr
   23     | expr '+' expr .
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


State 67

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    '?'       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 68

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   25     | expr '*' expr .
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '?'  shift, and go to state 47

    '?'       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 69

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   26     | expr '/' expr .
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    '?'  shift, and go to state 47

    '?'       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 70

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   29     | expr '?' expr . ':' expr
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47
    ':'  shift, and go to state 75


State 71

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 72

   16 stmt: LOOP '(' expr ')' stmt .

    $default  reduce using rule 16 (stmt)


State 73

   13 stmt: IF '(' expr ')' stmt .
   14     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 76

    $default  reduce using rule 13 (stmt)


State 74

   15 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 15 (stmt)


State 75

   29 expr: expr '?' expr ':' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 77


State 76

   14 stmt: IF '(' expr ')' stmt ELSE . stmt

    LOOP   shift, and go to state 4
    IF     shift, and go to state 5
    WHILE  shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 78


State 77

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | expr . '?' expr ':' expr
   29     | expr '?' expr ':' expr .
   30     | expr . EQ expr
   31     | expr . NE expr
   32     | expr . GE expr
   33     | expr . LE expr
   34     | expr . '>' expr
   35     | expr . '<' expr

    AND  shift, and go to state 34
    OR   shift, and go to state 35
    GE   shift, and go to state 36
    LE   shift, and go to state 37
    EQ   shift, and go to state 38
    NE   shift, and go to state 39
    '>'  shift, and go to state 40
    '<'  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '?'  shift, and go to state 47

    AND       [reduce using rule 29 (expr)]
    OR        [reduce using rule 29 (expr)]
    GE        [reduce using rule 29 (expr)]
    LE        [reduce using rule 29 (expr)]
    EQ        [reduce using rule 29 (expr)]
    NE        [reduce using rule 29 (expr)]
    '>'       [reduce using rule 29 (expr)]
    '<'       [reduce using rule 29 (expr)]
    '+'       [reduce using rule 29 (expr)]
    '-'       [reduce using rule 29 (expr)]
    '*'       [reduce using rule 29 (expr)]
    '/'       [reduce using rule 29 (expr)]
    '?'       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 78

   14 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 14 (stmt)
